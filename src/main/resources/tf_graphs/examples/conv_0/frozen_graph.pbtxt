node {
  name: "input_0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 28
        }
        dim {
          size: 28
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "filterW1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        tensor_content: "f\025`\277u\304\037\277\"if\276\203?\037\277*\234\032?J\007\372?]\264\243\277pbE?\250[?\274\247\030B\276\004\215\237\276\322}^>\014\230~\277\221Un\277\026\260\221?\200qG?\263\261>>\264\006\013\277\316\366:\276\272\030a\277\006AB\277\300R\\\277\367\316\322?\260/\351>Y\351\035? 5m\276\345\204\360\276}\247\017\274\202#,\277\217\\\227\277}|\210>[L\201?;\277a\277\014\301\241?\376\213\273\276\0227\267\277\213\223\247?\225\001;;\204\307\235??\255Y>\231\267\026>5h%?\370\256l\275z\361\355>\030yB>j\337\245\277\366\226\356\276\324*\017?\230\323\276\277\244I\246\276\257a??`\2334?\214XD\300B\035\371\277\204Z6\276\271d\004?\211\377\350\276Hf\032?3\333\022\276Q}l>-\023E\277c\257\260\276J\000\033@\036\013\305?q{\022\300\360\345&@\213\021!\277\274,g\277\315pk>\014\2057\277_\256\261\277]\006\227?\212\200\223?7\001+\277q\027(\276\223\362H?\243mE?\2421\013<\r\376\016\277\275\030\023\277$Z1\277\242!\242?\n{#=\177\tj?\223q\335\276\241.\036=|9\035>rk(\275ox\375?\263\031\307\276\020\253\252\276x\265\007\277\037\321\022\277W\374\352\276x>\221\277\213\275\210?\014[\'=8\367\305>n\242\217\277N\004\255?\005\246h\277\323\342\002?o*H?\3567\255<O\336<>\0137I\277\026\327\016?\t?\022@9r\365\275\336wf?q=\014\277\257\001~?\223c\216>\000 \026\300\275Eb\277C\002\n\277F\330\246\276\307|a?\014\326d\2776\253\216?\034\256D\277\007\367y\277\345j\357\277\237\324\316>\251\325R\277U\311\371\276\261\325\334?\230B=?;\2207<)\256P;e\\\036?\214\205\016\276\177\377\305\277q\010!<%\204u>\270\022\017?\324\321L\277(\213\342\276\220X\310?9\327\217\277r\024n\277\320s\202?\271\314\033\276\304\204\336\275\362\315A>\375\351\027?\365\324a\277\365a\304=\2279%?\001D\000\300\374\"\212>\311\231\356?S\301\350\276-\007\020>\274fS\277|\334\336\277W\213\215\277\256<\315>\2425\006>C\274\222\277\334\021H\277;\235q\277l\231\273?\364\276\216?\220#\254?\355\002%?\334he\277a(\243\2763\362\273>\30371\300\314$5\277\030k>>\366\355]?\314\305\261=\245\222t\277\204v\350\276KQC\277\2133V?\027\251\230>\007~\350>,\021s\277\3147\223?\223 d=X/ \300K8\204?\036\013\"?\r\364\220\277\345\302\026@\273\276-\276\370\376\315\277\326\327\233\276\017K\304\277\310\246e?Gp\276\276S\317\371\276\333\201r\277D\032\244?8\003\222<o\3075?\210\007\245?\341X\n\300\262e\372?c\234\252>\277p\312=[\235Q\277mr\203?\300\266J\276a\265\017\275b5\t\277U>\366\275\305Q\027?n\245K?\271\366\241\277\030U\261\275S\033C\277m\340\314\277\300\203\344\276\306R_?\312\343G>-\202\367>\271\002z?<C$\276\302i\210\277\214\010B?f\007\211\277"
      }
    }
  }
}
node {
  name: "filterW1/read"
  op: "Identity"
  input: "filterW1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filterW1"
      }
    }
  }
}
node {
  name: "conv2d1"
  op: "Conv2D"
  input: "input_0"
  input: "filterW1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "avg_pool2"
  op: "AvgPool"
  input: "conv2d1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "filterW3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
        }
        tensor_content: "D\037\214>\254\'\252?\347\271\007\2779\206+\276\370~:>\245\224H\277\025\277\240\2777xJ\277\204J2=\020\256`=8\335\244\275A\361\275>\355\026\322\277\270V)\277\260a\003\277\025\215\205\277\307\003\234\275\032\325N\277uv\363\276\252\206\332?\357I\261\276\301\215\326\277^C\321=d\211l?\000g\246\277\220y\245\277IE\222?\377\210\267\274\244\023\225>\304\377\365\277\031d\036?y;\004\277\336\301\037?\262\313\266\2763\364!?\004\034\263\277\350\n\307\274j|/\276\332\315\n@\n\002\270\276~\002\203\277J\223\035=\30718\276\237+\343\276\221\377\n@b\236\257\274u\243\226\277\353\340\267\277\251<\212>hG\346\277U\322\375\276\303.\005?\365F\307=\342\033\024\276\260\326\227\275gl=\277;]\221\275\353\357\205\276\205\3350?\307\300\032?\253\240\027>\213\246\r?.\215[\277\253Z\023?\310\243\233\277%(\020\277w\037\300=\337iT\277\005\005\031?\333\314\240\277\271(\215?\0105\"= \337\266\277\034\302\326=r\261\023?<v$\277l\2711\276M\r\253>V\003\'\276\026(\246?R\317#?\237\361\320?E\001\343>\\\364\320?;\005x\277ml$?\013\355\020?\0103G?+\256\n\277o\325\352?\330\257T\2779\001\227?\222\231k?\355^\001?\355n\327>u\271\007?\355\203\353>\375\0319?\266\027\347\275\222\010\341>\206c?\276\224\001\237\277\347\372W\276\nQ\272?\343E\346\275\023\037?\277\251\020\215\277Od\312?x\242\234?\365\300a>(\236q\275}\257\202?\227[(\277jd\001\277K\254t\2762H\237\277$4\022?\327Y\254?\025DR>\220\\\216\276b\367\345>\212\001\010=H\344{\275j>\246\277\346\233\231\277\025vp?PO1?\333\241\340\276K\211\273\276\345\206D?\377(\313?\314`q?\355,\335?\014\216-\275\353n\270\277\031V\234\276W\364\r@\365\224\310\276\022J\245\277\330\360\370\276\026X\215\277\0168|?w\365\267\274E2\201\277\226\220\216?\375\233\215>\201Q\233>=%f\277P\025\016>\230,\023\300|?\264\276{,\354=2\252\272\277\365\003\246>\316?\036\277\206h\261?Xv\213\277\363\273\177?Z\220N\277w\006\226=\251h2\277\340&\257\277\017\340\231>5]1?\275\306\212?$DP\277R\376s?\273\021>>\245\034\325\277\206\341\274\277\032\317\036>Gii\277W\nS\277\206\213m\277\005|D\276\267\017\210\276\000M\027\277\321\274j\276\330\265-\276\260\230\213\2773\035\030>\027\324D?\033\347/\277\252mn\2777\2467?\013h#\276\221\356f\276\352\376\245?\276\227~\276\004\253\360\2759\027\311>\"\360+?(\360\020?\'w\252=\335\375L\277~\206A@\214\367k?n\275\256\277\252bJ\275\373\332\"\300\274\203\207\277vv\204?\353\304\303\277\nK\006\277\207\035\014\277\377+\343\277\247\364\232>Boi?\375;\r@\236\352\320\277(k\276\277\326\244\206? \370\260?\373\2019>\222I[?\267w\205\277\227\361\267\277\247t8?\2253\352\277\365\341s\275\033\234s\276,#\027=\325|\203=\340f\325>R2d\276"
      }
    }
  }
}
node {
  name: "filterW3/read"
  op: "Identity"
  input: "filterW3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filterW3"
      }
    }
  }
}
node {
  name: "conv2d3"
  op: "Conv2D"
  input: "avg_pool2"
  input: "filterW3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "max_pool4"
  op: "MaxPool"
  input: "conv2d3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\004\000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "max_pool4"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\03670?\354K$?\202gC?\214\357\361>f$\022?\2100\231>"
      }
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "output"
  op: "MatMul"
  input: "Reshape"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
library {
}
