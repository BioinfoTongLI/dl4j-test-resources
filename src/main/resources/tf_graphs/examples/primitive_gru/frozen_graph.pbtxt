node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 2
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Variable"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\350\337\241?\026k\340\277W\333\264?r\346i=\022\220\253>\227\301\341>"
      }
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
}
node {
  name: "Variable_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\250\231W\276\004n\265\276"
      }
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
}
node {
  name: "unstack"
  op: "Unpack"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "axis"
    value {
      i: 2
    }
  }
  attr {
    key: "num"
    value {
      i: 6
    }
  }
}
node {
  name: "rnn/Shape"
  op: "Shape"
  input: "unstack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/strided_slice"
  op: "StridedSlice"
  input: "rnn/Shape"
  input: "rnn/strided_slice/stack"
  input: "rnn/strided_slice/stack_1"
  input: "rnn/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/ExpandDims"
  op: "ExpandDims"
  input: "rnn/strided_slice"
  input: "rnn/GRUCellZeroState/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "rnn/GRUCellZeroState/ExpandDims"
  input: "rnn/GRUCellZeroState/Const"
  input: "rnn/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "rnn/GRUCellZeroState/zeros"
  op: "Fill"
  input: "rnn/GRUCellZeroState/concat"
  input: "rnn/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 6
          }
        }
        tensor_content: "\212i\324>\310Z\364>\0331M>\256D\337=<B\030\277\020\327\231>q\362\277\275q`\021?\242N\265>\324\363\016\277\330n|\276\237k\253\276\000i\205>0p\236\276\"#$?\3731\360>9\t\253>\272r\261>>b\211\275l\214\243\276&-/\275Vr \277x\226\360>\215\230!\277\251Q\305\276E\312\032?\310k\024=Gf\t\277&\374\217>@}\'\277"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/GRUCellZeroState/zeros"
  input: "rnn/rnn/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        tensor_content: "j\313\200?\0330\200?R\353\177?\036\305\200?\214\257n?\267/}?"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/gates/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates/split/split_dim"
  input: "rnn/rnn/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 3
          }
        }
        tensor_content: "LX\251\276\013v\234>?\315q>\035\222\243\276\223)\370\274\027\312\243>\272\3561\277\243\364(\277\340BP?\244\230K\277c\246\202>7~\\?\364\177\310>\267\035\363=W]\234\276"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "unstack"
  input: "rnn/rnn/gru_cell/candidate/mul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\224yl=t\341\004?I *>"
      }
    }
  }
}
node {
  name: "rnn/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "rnn/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates/split:1"
  input: "rnn/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub/x"
  input: "rnn/rnn/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_1"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub"
  input: "rnn/rnn/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul"
  input: "rnn/rnn/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/add"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_1/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_1/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_1/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_1/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_1/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_1/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  op: "ConcatV2"
  input: "unstack:1"
  input: "rnn/rnn/gru_cell/candidate_1/mul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_1/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_1/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_2"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  input: "rnn/rnn/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_1"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_1/x"
  input: "rnn/rnn/gru_cell/gates_1/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_3"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_1"
  input: "rnn/rnn/gru_cell/candidate_1/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_1"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_2"
  input: "rnn/rnn/gru_cell/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/add_1"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_2/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_2/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_2/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_2/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_2/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_2/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  op: "ConcatV2"
  input: "unstack:2"
  input: "rnn/rnn/gru_cell/candidate_2/mul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_2/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_2/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_4"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  input: "rnn/rnn/gru_cell/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_2"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_2/x"
  input: "rnn/rnn/gru_cell/gates_2/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_5"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_2"
  input: "rnn/rnn/gru_cell/candidate_2/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_2"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_4"
  input: "rnn/rnn/gru_cell/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/add_2"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_3/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_3/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_3/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_3/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_3/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_3/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  op: "ConcatV2"
  input: "unstack:3"
  input: "rnn/rnn/gru_cell/candidate_3/mul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_3/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_3/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_6"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  input: "rnn/rnn/gru_cell/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_3"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_3/x"
  input: "rnn/rnn/gru_cell/gates_3/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_7"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_3"
  input: "rnn/rnn/gru_cell/candidate_3/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_3"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_6"
  input: "rnn/rnn/gru_cell/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/add_3"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_4/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_4/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_4/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_4/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_4/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_4/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  op: "ConcatV2"
  input: "unstack:4"
  input: "rnn/rnn/gru_cell/candidate_4/mul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_4/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_4/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_8"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  input: "rnn/rnn/gru_cell/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_4"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_4/x"
  input: "rnn/rnn/gru_cell/gates_4/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_9"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_4"
  input: "rnn/rnn/gru_cell/candidate_4/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_4"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_8"
  input: "rnn/rnn/gru_cell/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/add_4"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/gates_5/gates/concat"
  input: "rnn/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/gates_5/gates/MatMul"
  input: "rnn/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  op: "Sigmoid"
  input: "rnn/rnn/gru_cell/gates_5/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/gates_5/split"
  op: "Split"
  input: "rnn/rnn/gru_cell/gates_5/split/split_dim"
  input: "rnn/rnn/gru_cell/gates_5/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/mul"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  op: "ConcatV2"
  input: "unstack:5"
  input: "rnn/rnn/gru_cell/candidate_5/mul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/concat"
  input: "rnn/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  op: "BiasAdd"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/MatMul"
  input: "rnn/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/candidate_5/Tanh"
  op: "Tanh"
  input: "rnn/rnn/gru_cell/candidate_5/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_10"
  op: "Mul"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  input: "rnn/rnn/gru_cell/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/sub_5"
  op: "Sub"
  input: "rnn/rnn/gru_cell/sub_5/x"
  input: "rnn/rnn/gru_cell/gates_5/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/mul_11"
  op: "Mul"
  input: "rnn/rnn/gru_cell/sub_5"
  input: "rnn/rnn/gru_cell/candidate_5/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "rnn/rnn/gru_cell/add_5"
  op: "Add"
  input: "rnn/rnn/gru_cell/mul_10"
  input: "rnn/rnn/gru_cell/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "rnn/rnn/gru_cell/add_5"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "output"
  op: "Identity"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
