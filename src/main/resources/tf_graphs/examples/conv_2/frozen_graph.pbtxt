node {
  name: "input_0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "filter1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 5
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "z\376 ?\360\307\223>\250\325;?fd#?<\244\355>8w\225>\266a\034?\306\260r?\302\3630?\032HS?\356h[?\370\3131?\252T\033?\000\313<<\000[\202=\372X5?>\274#?Lf<?\000\373\253>\030\331A>H\217\274>\234\332a?\340l\373>X\360\036>\240\tr?\200\263\315>\234\257\310>\320e\000>\240\303==\010\221X>\250+$>8\352#?lo`?To\272>\352\230\013?ZU+?\220\234:> b\324=\266rT?hx\263>\020\023#>\3042\222>\322\032$?\010\310\364>\332n/?\220\332O>\370\3022?p6%?\200\023_>N\277}?@\375\342<\036\350b?(\211\330>\310\233L?\336\030{?\340\0371>\220 \366=\024\306P?\326\006w?0\257\315>\354\353\323>\010\2245?\300\201\315=\334\005K?\250\035\024>\306\316\r?|\325\337>\004I9?\020\220p>d^(?\020I\005?\340\273P?\314R\220>\020cL?\310/\303>\004\351\004?\336I\035?ht\306>d\030\270>\0008b;\\\375Z?\270K\306>\354\305\233>P]N>Z\361.?\216\0246?\214\270\204>\034\330\252>\000\"3>lvi?<bx?\022\363\035?\204#\032?0yG>\350\010\206>\310\334I?\300\355\315>\272&a?\274\003`?\010{z>\002\205\021?\200B\267<\264\341L?\306\214z?\340 \031>\276Q%?> ,?\212\016\\?\360+\251>Z\004\032?\320\216\342>\324\252\337>lC\252>\030\204%>V\347j?\360\340\034?|\272\367>\200\333>=z\001T?pD\022?H\364<>.\257w?\264q\247>L\036Z?\204.N?\320\353,?\000\014\272=t\274g?\236\021S?\310,2?\304\313{?\300q\374=\212/\t?2\251\014?\214\356\375>&\270+? \210\360=\350\256\273>\314;\364>\312d\033?\300\345\236>\022\003\025?\036=q?\374b\231>\254]W?`\335\360=\310\020\276>\310\341c?\024\233J?\036\306O?\260\000\260=\022\335\007?\244\r\335>T\210\032?J\234`?J\366-?b\256,?\000 l?\000<}=R\\t?"
      }
    }
  }
}
node {
  name: "filter1/read"
  op: "Identity"
  input: "filter1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter1"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "input_0"
  input: "atrous_one/SpaceToBatchND/block_shape"
  input: "atrous_one/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "atrous_one"
  op: "Conv2D"
  input: "atrous_one/SpaceToBatchND"
  input: "filter1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "atrous_one"
  input: "atrous_one/BatchToSpaceND/block_shape"
  input: "atrous_one/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        tensor_content: "p\260\327>\354uR?\024Y\341>\000\364\312=BjH?\0047\326>X\301[?\352[:?\326\177N?\272ao?\342\345\033?`\362\024?\344$}?\266\023V?\350\261\342>\206ug?0\275\332=$\221\354>x\361\037?\\\344\355>\022\343\t?\"@7?X\021W?\366uX? #\310=p$\333>\260t\376=\340\337\375>\270\310\t>b\240$?\016rT?h\002\223>\304\n\302>@\347\014=d\322\274>\262\322Y?\036\361??\270\353z?\240\013\026>\220\302q>\240\272\025?\210\251\246>(\016\n>TL\344>&Fo?F\334g?\000\365[<\256\224t?\372h\026?\300\233a>t\216\220>\254\014\235><\306O?\200\242\243=>Nl?\364\374\373>\266\220F?\330\343%>\002e\037?4\204X?\330\251\340>\020\244\223=<\240\254>\260\222\225>\360|\226>\344T\237>\226\tW?\020\0236>\240t\334>H\234\021?@{T?\302\303D?\346\342O?\220Bw>\000\372t=\204E\205>:\201#?|\342\240>\360\357\247=\360\031\034?\030\017[>\\\221\003?\200\241\037<8\300q>\220_\'>\250x(?\324P\244>Ly\026?@6\254<\\\227\263>\212\204u?$\321\361>`.-=\200\207\203=p\177\374>\272^Y?:qI?D?A?\314E\343>\360\215\320=\230H/>\014\320\273>\210CM?x\207\032> M\027?\000\002\373;:\035X?\300\364P=\000\334\306=\234\334\234>\274\323)?\3567\035?`\201&=\220\014\231>0p\332=xc\243>\232\302\001?\300\266K?`\356\247>0\305\016?\252\364\031?p\311\t?\340Wl>$\230~?\304A\226>H\370?>\214cr?\262\274%?(\006\370>lWg?\364\203\214>\344\345\230>@p\n>hF]>X>\311>\312\372\032?r\342C?4o\363>\000e\265<\036l\t?\370h\320>,bD?\326x\000?T\344\t?@zO> S\177?|\221\335> \247\362=\206D\n?TR\262>T\020\375>\352W@?\240?\207>P\254|?\364\253\276>\232\310S?|\323\276>\014\365\365>T[\270>\354ry?\320Ka?R\247r?t\251\343>\356g@?H\253S>\240\365\035=L^E?\270\240\013?\250\003\337>\270\r\301>rRt?\324z\264>\252\360\\?N\272G?$\205C?l!<?<{o?\236[=?Jul?<\317\370>\260\302^>$\260&?\230H|?\030\025\025?\364\317\202>(\"5>\3729t?\260,\317=\3408&?\240\343\031?8\202\005>\366UN?@\365\212>\000\357\010?\024\330\354>\320\313\241=\220C\337>(4\273>\360\367\325>\\\247\364>\362&@?\340\260O?\342JH?\250\301P>\370\326}>H\244\241>\000,\'<,G`?2\357D?\240\222\224=xt\215>d\234\237>\336\026=?\304\227N?\250%\324>2\256\017?\344\344\241>p\240\315>\"2l?\272\010o?\370\324c?\340\246\224>|\307\007?\000\305\303;\220\026\033>8\233^?\036oE?B\266w?\212\277\'?\344\230??\000kI>R\023,?\316\257{?P\233??\370I\022?\014Z\242>x\027\t?>\377R?\330\t\306>\376\220<?\204\3249?p\342k>\360Ag>\\#\253>\230\022\353>XB??\230\006f?,^\272>\004\010>?v\345A?\370\354&>6\327I?dP\225>\252\320h?\340\372\006?p?\232>p\013\355>\304\2765?\214\030\316>\352@r?\226f\022?$\225\343>\204{\347>\360\260\374>\014V\024?\354\333\036?\320\360\352=T0\'?\200\013\224<\300\331\350=\272\003o?\200.\352>\000\200b?v\311\022?@\320\313>\\\205K?T\264\023?\310\\C?@S\250>\364\016\"?\202\300\030?P\231\264=\364\361\265>\242y}?Bu2?\020\314\335>\300:n?hG\337>\270s\036?\300\215\r?\304\310\002?\220:V?V\223\032?j\212%?\214\036\236>\354\210\375>\366\001(?\014-\026?\220\277\244>\246:F?\2525#?\014\336\335>\300\320\302>\024\017p?\360\221\310=\240\301\225=\226\243_?\250<\252>0\347\356>\300\233.=\000\340\350;6\255g?\210\366*?\034-\311>\026DW?\366L\024?\364\rC?\210\204\260>`\000\005=\024\266\235> 7\010?\224\016\r?\310pD?d,\300>`U\260=`\030F?`\2229>\220Y\233=\230\273\274><\220\000?\036\332[?\210}\203>\220\025\026?\010\035n?\260\346%?\004o)?(o\232>\036\037Y?\270\212\347>\224\267\327>D\213\326>XTM>\276\213#?\300\351u>\\\320\320>\000>\347=|\247D?<3\227>\240\032\273=\324\321`?\210\244X>\364#\357>\370\302\330>\260qv?\350\246!>8\3730?\242G!?\250I\030>.\335\023?\020\232\365>\000\320\271;H\2150?@S\366<p\321I>@\301U?\200N\216<l\017\260>@\357m?\202a]? \363\266=>\246L?\002D\t?\020h}?\310z\n>\200\211\371=|\355a?\240\033u=0p:>\340S\t?z\223.?\312\251*?Xr=>\200\311d<\2061\r?\000\020Z>\324 0?\326&L?\"hC?\300\227\305<\204\025\372>\200\231D=\016\370U?\350l\275>\344\341f?\226\254c?b:^?\000\035\251=\340\267\310=\200,\334=T?G?\004\273\260>\310\276@>\370-\002?\032\331\007?\310\325\r?\240\242\016>\340Ow?\230\276\021>\352X!? \366\342>&\252<?\242\216O?\250\222\005>\220\223\226=\346\360\016? \r\330=\236\021b?\034\265\361>X\314\305>\nt\035?\360\2603>\320\325w>P\017s?|w\310>\000\301\365<0V\355=L\360\371>\220e\t?\370-h?\352\350y?\304{[?\230D\321>D2\261>`\260-?\000sz=\326\317G?\000I\014=\010\204\325>X\210\307>xy\311>\304\025X?\3705M>\310\312\360>\204Lq?P\324x?\330<\227>\320\331x>`\314\226=\324Y7?\250\302S?P\377D?0\270$>\210\035s?\344\267\244>\322Sg?\\\001\026?`1%=\374\217\006?h\242\332>\330\003\007>,\2122?r\023\017?<\231\212>\252\003t?0\331\362=\272\253J?\030i\317>\314\005\334>\340\340\027>\332f\177?Z\nw?(V\261>\240\306\337=\350\257\353>L\264\357>\220MJ>@\274;?\220\376y?\350^\230>@7t?\320\352^?\004\350\201>\264\263\362>\016:$?\264\316\330>\320W\265>\334\366\366>\330\347\022?Do\022?4F\204>\020\330??P\014n>\030O\352>\212(v?\312\365\020?\360\036D>\324\224\244>\200\246\326=X9<>\030\267\376>\266\365X?\214\336\341>\004\361\376>x\372\210>\350\331w?\314\257\363>\230\211\262>XO\335>\264\253,?\326,s?\350\202U?DnR?\326W5?\340\001\327=\026\002k?\364\"\302>X\365\025>t\307r?\200\256\331<\274\201{?8@b>\320o\233=HXH?\200\031\312=\350\365a?T8\315>\374\233%?\240\216\357>\350,\376>lY\323>\336qg?\"hm? \204\002>@\303\322<4\363\364>\340\r\003=\000\333\r>x\267\004?\364\265\355>\236\217\r?8\355q?\360RW?H\261J?\230\025\026?\260u\360= \310\224=\310\004\362>|\016\346>\020\356K?jo\002?\014\232\263> \242m>\200\014M=\210\251\367>\240zd>\240\021`>\300t\347=\240\n#?\3722\001?^\312P?<>\211>\350\202\351>\312\363P?,&y?\360R\223=\250j\254>\020f\001?D+\215>\364\272P?\344#\003?d\205\200>LML?\000\032K=(\263\260>T\001\035?\352\305(?\320<\031?D\237\206>\366\325$?\334\264\006?\376=`?\\4\\?\204l\343>\210~\'>\000b\360<\350U\352>`\264\343>\006\027 ?\030,+>\260\006\004?l|\340>\346\343D?\230\240u?\270\245(?\226\347H?\270\374x>\000 E<\312\270\'?\014\2033?\320-\262>4j\356> l\034>\300\255\364=\320\037\277>\000\377s>@\352\337>\336\375\016?*\314#?\300&[?\2602j?\200\354\003<\336\017\"?\030*l?\360\016\245>\264\374\341>l\313k?\250:\002?\200c^?\360\260\244=~\257~?\376\206\027?\200U?>P3]?\020\026#>\334\3555?4c\254>\000\0273=\020k:>\374\177:?\036>\177?\000\316\247=\320f\267>\346w\014?\"\242M?D2A?L\220\304>\212\221\017?\2545\304>@\331\360>\354\030\256>\274\356\033?\350-S?@\273\000?\200,\316>\200ca<\200A\246>\370Y\215>\2548U?\310K\213>\376@a?6\304\r?\316\004r?:\377??\214\345\265>\230\032N>\202&)?\342\207t?DH\265>\270\021\017> \306;>N(\004?\\\225\032?\024\314\226>\264\001#?zM\032?\006\350~?n\367N?p#z>\224X\240>\356kf?\\\360T?\260\r\035?\026\307\033?\240\367\016>\260\227^>\2745K?\002\241\036?h\317\353>\306\262e?\256H$?(i\014>\274\305\366>\034@T?~ai?\250\350^?\310\217\037? \347\361>\200u\217>\234\'\231>6\220I?\020\207\036?\364\005\270>\340\205\262>\214\273\370>\250\332\210>\014\007<?\340\2310?xY`?\000s\340>\216\\<?RT\"?\000\274\352:\340\213\027>$\360 ?\304,J?JLR?\334\331W?f\344~?\340\'^=\374ui?$\310\334> \336\243>\330\363\315>\320\376\217>F\222\t?\002\177p?@\320\247=`\326\264>l\034\002?\222\320T?x^\001?0\334l?6o\010?\314\221\257>*\265X?\224>n?h\211\035?\032\nx?(#\221>\014\376\026?\230\244\371>\030\022.>\312\273(?\236f\005?\"\344K?z\210\036?p\013d>\326G+?\240\'\262>\000\0323>$\351\300>\340e\200>p\3558>(\2270?\216\202}?L\267@?\306\325.?\330\260\220>`\351H>\200\366d>4\352\335>\230TX>N\343;?\360\377K>8\202E>\260\213\314>\374\257\341>\330@o>\266\003\035?d\205\263>\000\351\027=@\325\321>\260\373\224=\342\366F?2\277G?\360\241\243=\374\232\014?\270;\002>t\302\314>0\240f?\324\274(?\220\375z>\3363/?\270\013r?\210)`>\230q\226>\202\317N?\364U\245>\272\206\020?p\327\222=8\211\247>`\204\372=x\037\351>\314\340h?pU\313=\214ZC?\300\276\375=j\277G? TR=.>#?d\371n?(\276\">\240M&=XL\253>:YQ?\300\276\364>\214\2203?BdD?\240\035\356>(\003b?\242\276c?*4I?\260\370\370=d\t\203>PJ\204>@\353\332=\350\320x?j\365g? O\242=\240f\030=\350\2603>\262Rc?\000\357I<*\"\022?HP+?\020I\366>\262\305\027?\274\203\354>\254\014\005?`\361\013>\300 \366=F\265\024?\244:\252>\266\364\002?\204v+?\010\227\242>\220DJ>\352~\\?\0169U?\2246\323>\340A\037>H@\201>\010-\302>\340\204\270>\"C!?\000.f;(j}?\\\010\023?\334(b?V\3764?xF4?\242\340L?\016|o?\204\333\342>p\3727>x\3014>P\305\323>\224\351s?T\t.?\362\313\027?(6V?\362+\020?^$n?\354\221G?jm\004?\350\262o>\"\0236?\034\251\355>0\034\000>\300\n\025=T<X?\254P5?\200:U=\244\275\277>$@\t?(\005r?\260T?>pQ]?DA\177?\320\034o>\004h\377>\312\300T?\034\345L?l\205 ?\360\361\265>\000\350\244=\202\321\013?lOB?\220\205\226>>}>?\352\263J?P\200=>Z\315\005?\340(+=B\203\010?L6#?&\244&?\000s4=\264B\335>\020!\230=\000\252$?\010\246x>\004W\341>\024_*?\374\325X?\370\200G?(\362\220>\314w\'?f\351_?\254\026\300>\024\004m?\304\r\201>\000\301^=\330Fq?\004\336\243>\300\232\203=\350}>?\350\356}?T\2114?B\265C?<D\316>\374N[?P}\205= \361I=\010\333q>\264\323\225>H\305<>\240\251\014?\200\035\030?\200\225\322=\236\342!?\250\036C?\250\253{>LB\250>\356\240\010?\320\271H>T<\335>xg\326>\020\265\226=\376kx?\362a(?\202=\020?\332\346]?\036=\036?*\267\016?\200>\274=\320\345\362>\260\341\274>\362\263a?\214\030\251>\236\312\037?\200x\025>\322Qg?8\314Q>\234\201:?\366\307e?\212\014K? @\\?p\245\201=\214\315\225>.zr?\004\034\272>R\'S?\000\202m=8\317P>\000f!<\252k\024?\000?\317;\336\277B?0h->\010\320L?B$H?rY{?Tf\031?\274\231\366>\300\'\266>\350\323/?\272Fu?\230\024\010>\370\345r>\210\007w>\244Ba?\240HP>j\260x?\244D\356>\340\037r?\240/Y?\240j\022=\300U!>\000N6=p\257\250>@\336\341>H\025%>\300U\333>v\037\006?\000`\230>|M\007?\360z\205=l\347o?\030*)>\304\341o?J\310F?\240|w>\240\226\000=\322\017@?\340\246s>\3764\005?\004\261\301>\374k\004?$1,?\204\004u?\250\245\354>\350\177V>\346u&?\220+\362=\304g\276>\230\266J?Z\226n?\224p=?@\330\264=\326\367$?hb\215>.\363$?\270T1?d\032\372>\000\275\017>@\360\345=.\\r?\320\037\234=8\201|?\000P4<\320 \266=\032F{?\000\354\234=\000\233\262;\006v??\240eB?\2342\236>\326\3362?\000W\371;\2423Y?\024J/?\364\312\250> \230\212=\250\270T?D\252\211>\344-&?<\200\241>\264,\354>\210h\337>^\354e?0\352\310=\310\017\262>\310\2742?h\353\362>(\245\276>8\245\036?VmT?\022\355`?\332\035\\?\350\031\263>^b1?\000\002w=\322\371x?\240\317\002>\330V%?\256\023:?\004?\215>\230\325h?\324c2?\212\014\007?\n\266B?l\324[?\320\270w>d%\303>\340[\260>\0105V>\010\267\371>\236\236_?\200K\326<\306-\020?\200<_>|p\014?Z\270]?`\020v?\204y\361><0/?T\'\324>\206\002n?\\\010$?\354\326\323>\300\022\343=\024`1?h!~?,\252\267>:\316:?\204\245\324>\354^\032?~\267{?\320\312\003>\364X\230>\300\374\244=T\344g?4\312\213>pg\214=\200;\365=X\206\013>\204\305e?\004\030Y?v\341(?@\343\243>0\013\021?\340S\033?2\246W?XbG?\350_`?\300M\305=T\036W?<I\366>v.\001?TL\343>\0103\255>RlX?\242\357u?\300\312\260=\256\220v?h\352V>R\266\007?~\007Q?\020\025X?`y\265>\354+\366>\000\000\\=P$\r>f\233\013?X\003\341>\310\325m?BXe?~f7?Lq[?\350\354\237>$\261\323>z\227x?\240wz=\330\330\023?8\211o>\260\013\265>\200\325p>\000s\362<r\221\r?\264\371S?\324\346\272>\222\321\031?\024.\360>\220W\312=\200fR?`fy>$\\\245>\214e\214>l\035\305>|\350\307>\234V>?ln,?\360\214\273>6\351\035?\000\235\263;0\205\267>N2`?6L)?\300}\325=\340\203[=\014\347\227>\244}\350>\240o\233=Xa\230>\320\242\243>Xjy><\014\232>$\212\360>\014C\035?\354\277\372>\"\215\t?L\253\333>\020Q\211=\310\212\230>\222\016\003?Lr\243>\0325A?\266XP?`\343?>\226rU?\340\"z?\324\364V?hq\035>\n\370\023?\260\364h?t\255\337>\300\2420>x7z>\214\224\275>\330\177\262>\240\214\364=\254\004\306> r\325>\3202\305>2\246s?\366x\010?\332\023\n?\216\312\024?\364\345\243>\220=\271=\3603\007?d\226)?\364\314\254>0\341\253>*\260\036?\240\302)?\342\033$?p\026\370>\310\350\324>\344\324Y?H5\230>^\2341?0\002D>b6)?\016\333\013?h\030\346>\310Cf?@\330\237=\334\020@?P\026\200>8\255u>n\223@?\030\267A?pN\231>\006\220Q?\200\246\307<\000l\357;\2402\237=\034\215\223>\200\020\000=|z/?@\235\304>t\350\305>\000\342\177<\320k\021?\330sh?D\321S?\226\354\022?\330\212t?h\271\367>\200\212\235<\220\254\304=\030\231\313>\306\220\020?N\026h?B9H?@v\331<d]E?\364\307/?80w?*F/?.\253Q?@\007\371>Z\205\023?\200H\346<DkV?\200\341N<\304e\333>(e&?\240Tc=\002\360E?\000\230\037;d~\277>\344\247\362>\230\262y>,\016:?\310\306l?\234+G?\204\177\320>\250\026o?\216\315;?\330\251<?\360\247y?l\215\020?\210Cp?J!}?@$\271=\360\334\314=\020\321\014>@\001\307>\204\321\353>\274J\026?\230\211q>\234E\010?`T\213>2|y?\360\034\273>\310\337N>v@??\370\200$?\026vz?D\014\'?\354,\230>\324\017w?\346+\010?\220\355\325=\026\266)?\204\330\232>\214u\363>\236\n^?^\270.? \031|?\230\331u>\310]\262>\274F\311>\0306\'?\026\007\r? H3?8?\214>\200\035X?\220\035\356>\030\252I?\340\3565?\334\236B?\324\'\271>\314\036d?\360\263T?\202\3002?\000\217\t>\240T\330=\212\177w?\210\337\014?TXt?\340\263\277=\0001\273>\200\2128=h\311\340><\236\007?h\263\r>\020\241\371>|\346\254>\356B\n?\016\rK?\320\303j>\300\217\253>\332\355 ?\200\216\264<\216\326=?\002d\004?\340\000v=\250\263/>\354RK?\330\2759>\250\014\017>x\362\\?05\350=\340\207\303>\220\361\215>\370\341\006>\350T\263>\200\334)>\260\345B?\224\341\231>\034\337k?\270\3542?\200\261\327<\30044?p\016\030>\300\231C=n\330w?\300]\010>D\256\327>\320L\351>\300\256e=\214\214\261>\210\253\243>\310\260\301>\340\241\304>\352\314Y?6CE?@m\313<N\350(?(\263\020>\000<?<h\'3>\364\222\347> 5a?&\332X?\264#O?\240\324\256>\364\344\014?\362\244F?0\206\242>\210\016|? Fz>@\2758=\032\343L?\032\260\034?|\247\363>p\375F> x\000>\020+\013>`\371\026?\034\3674?\240j\212=`\270\213>\264\331M?H?$?\226\026/?\360\2644?\2144\036?\232\317??\260\341\351>\000T\305;\230p|?p\364\206=\014\243Z?\002\330\"?\020\251\371=\022\273`?\210\303J?\000.x<\312\214X?\000O\005=hXw?\022\311%?\272\246\005?dF\331>\360\'\301=\256gM?|?\354>P\005C?Xz\t>8u\035>\014\376\024?~\251L?F\241k?$>\232>dP\221>\200P\305=\230r[>\260\241\317>\220B\030>\374\202q?09\031>V\030\021?\014\227\367>\340\214\020?,\265Z?\312P\024?\200\310\037=\370f\343>\3140\005?:\353\'?\244{)?\306\277b?\350\260K>\0240\210>\3004\032?\360j\033?\030p5?\010F\273>>\257+?@\247W?\340/\301= 6\235>4\272\360>\260\252\202=\352\347\033?\240)\010=\000\016\026?\000\267\025?\020\271\311>P\240\244>0\325M>\300\266\023?`\267\304>\300\250W>\316rO?\320\362\203=~\220]?\300\312m=`\233\231=rTA?|\345\377>\270\347\203>\264`9?\342\224\"?\2446\342>\224\332S?.*x?\000\343\021=\214\203\326>\340\251\224>\254\215\032?\270\014.?\204u\037?T\222\274>\260\340D>\004\244\210>\270\302\022>\036/o?h\330\260>\250\226\330>l\326\001?\300I\321<\\\234S?.\244_?(\220\023>\030\004|?H\233*?@\367E=`\322S?\2004\323<\030\'z>\0006\027;,\3730?Z\367Q? zS?\030\005\346>\020\360\365=\230\374S?xt\033>\364\315<?$\276G?\014`\301>\332\023y?\344HA?\030\356\233>\360L\004>\030\312Q>@\372!?\216\024v?\360\331\347=Xv\020>0\031\331=X\335\002>\244\301\374>\020mS?l\303\211>X\253U?\200\201\241<\254Z\275>P\027x>\036\276??\026\255Q?\312-\177?x$\332>2\322n?\324\216\255>\350-\346>\304\277D?\214\177\204>\360Yi>\304\240\017?4uw?$Y\234>\274\310\006?t\034\261>`Q\260=\2708\241>\274\272\346>\376g\010?\240\314&?\270\367\316>Pla>pU\300>\260g\312=\246\207:?$p\260>\244\350\227>\300\245\277<\224|\267>8\374\256>\014)\226>0\025->\344\017\030?l\"\016?\260(\352> \303\313=\020\"\241=\310}\203>2lQ?\202\\D?\216\031\036?Pm\363=\240\342\323>\024\017\211>\250t\300>H\036Q>`Bw=\220\370\255=\360\207J?\360\254\024?\336\212Y?\006\025s?D\310\225>>\217^?\244\2166? cw?$0\r?\376\021`?\320@\303>\300\371\345=N({?x\303)>\270\210~>h\312\217>\034&\247>d+j?\036\340q?@\000b= \346f=\026t\021?\306\204:?\234\260\032?\334\375\014?\024\177\360> \313^>\034s\320>L\'@?\222\370v?\262\031K?\000Z\277>\374\251@?\306v)?(@\301>\200\265b=\354*2?\232u\016?\204\325\240><\314\322>\340\376\201=P\014\244>\\\345\n?\232\353I?\000\000\"=\240\361\030=P\352w?6\302\001?\304\032\034?\000L\241;\352rV?\024\347\351>\320w\226=\254o\316>Pd\240>\226\315Z?X\367W?\300\373L>\000\200\244<\216\251u?\334\006D?J\235C?&\237\010?@\331\267=\300\322\323>0\3150?\334\260\376>\230\256>?\274\026\232>\026* ?\344\206\244>\230\364\035>8\260n>\304i,?\200\214\t<~\324\010?\344\027\243>\270\207\027?P!a?B\224\t?\336-\001?\236|`?\374H\026?\006\226s?\310`h>\212D\023?\030\202V>\010\203]?\270\250\326>0\2672?\024\274\"?\300N2=\330\312\037>\230z=>Z(*?\0008S;\0345@?\034+\003?:\225Z?\022;X?F\036^?\010\026l?\342\222.?4\356\266>ts\257>\364\227\201>\240\006>=h8Q>h\352\311>\270\247N?\3345\307>\234\306f?`\255\226=\032\374Z?\260\014\r>\320o\347=\000)\322>\250g\226>B\277K?\026\206i?@g\037=\340O\343>\374\260H?B\370 ?\312\323\004?8\347\334>|\031\262>J\320{?x\000\226>\020\245\377=\340\303\347>`0\232>l\234\246>\242\277\021?\3206\316>\310^\223>\014&I?\3564a?\350\357~?\354\202\347>\230\206\271>P{\351>`>i=@#\343<,\376 ?@\237\264>\020\204>>\330\211\237>\016\261`?\230\006\236>X\201[? eg?\250\226M?\374%\322>\354\006\000?\242\314~?D\325e?\354\376\351>(\223\327>\220\211\310>H^~>\256=\032?\330nH?\300\310(=\3600\231>\024\256\036?h\277\304>\032\342\007?DY\326>\200\033_?l\271!?\346C0?\266\304@?\340f\243=\274\033\003?\302\'\027?\340\361\202=\006\2378?H)\364>.4\022?\360\3340?\034\261\250>6O=?\022S^?J\244`?\374\324\235>\250v\024>(\274+>\346n{?<\005%?\260[\221=|\210/?\000\034G;8;\313>j\351%?\360A\352=\316\377\030?l2{?<y\010?\254\373\333>\260\247\364=\270\354I?\200x\352<\350\022/>\364\304\251>\310\264)>d\275\177?r>W?P\216F>:\366<?\004?r?|&\247>\2224\025?\302\343g?\212W<?`\345o?\270\276!?\014\361*?.5\035?h\005\307>\n\342\"?\350\"u>\200&\257>\254\2128?\020{x>\340\317\360>\220\3004?\210\312{?\344N\364>\310\246\236>\\9\364> v5=2\364L?\330\217\263>\330\003Q?\314\207\335> \250r>\210\0318>\240=\322=42\364>\206tZ?\200\003\273=`\351k=\230Bf?\034j$?\010\207\257>\300\027\251=\242\325\003?\340\016d=\366lI?\260\305\225=L\211\007?\214\361\202>\2506Z?L\232 ?\000uZ=\0100C?0\003\005>X\377\246>$\003\350>\270\205\035?\354c\001?\244\212\305>8\3615>J\017K?\2542\346>\246\316A?\354\335a?\010\363\366>\200\010K<2.J? ]o=\000\357I<\254\314e?\370\340\013?\214\215\264>h\240\022>p\326\242>N\261z?\304\227t?\3001\214>N\374\002?\300\017b>\030\302d>\266\215~?v{\021?`\016@=hxL>\020K\205=\240\031T>X\341D?\366\271??\370\327\024>R\306:?(\005;>\3601\014>P%\261=\372\2358?z|s?\240\306N>\250/]?\240\363\366>>\305k?\004\305*?\0242\251>\374&\367>\376&t?\366wI?\232\253|?X\014\355>\220\370\372>\3008\363<\340LK>p\271\201>0\205\327=Z!\006?\202!O?\320\302s>\3609\343=\376\3100?\000\373\352>rCC?HRw?x\206\235>\344+\377>@\236\024>\000\010~;\250\275e>\000;\033?\024\360\022?4\277C?\\\346\376>\3145\311>(a\233>\240\216\261>\264\344\207>\300Ry=r>v?\314\374I?"
      }
    }
  }
}
node {
  name: "filter2/read"
  op: "Identity"
  input: "filter2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter2"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "atrous_one/BatchToSpaceND"
  input: "convolution/SpaceToBatchND/block_shape"
  input: "convolution/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "convolution"
  op: "Conv2D"
  input: "convolution/SpaceToBatchND"
  input: "filter2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "convolution/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "convolution/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "convolution"
  input: "convolution/BatchToSpaceND/block_shape"
  input: "convolution/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output"
  op: "Identity"
  input: "convolution/BatchToSpaceND"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
}
