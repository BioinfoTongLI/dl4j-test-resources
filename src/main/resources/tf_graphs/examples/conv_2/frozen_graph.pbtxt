node {
  name: "input_0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
        dim {
          size: 4
        }
      }
    }
  }
}
node {
  name: "filter1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 5
          }
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "8y\305>\000\"\032>\3705~>\304F_? {\242>\340\r\212=\026\345H?\360\\\217=\006\177q?\350\235d>\244^\254>@\362\336<p\221\314>\0007\270>\374K\202>\254y\251>\214\376^?\034\377>?\270\004[> \327\001?\274H\034?F?\010?\254\213\007?\014\342\"?@\361\214<\010\301T?\364\266w?\260\334b>\206\217\022?\016n\000?(f\275>\254<[?\020\225~?\254\354\360>\340\242v=\354\375\263>\274\025\202>\226\200\014?H\027,>\260n\\?\200\006I<d8I?\250\325g?T*\346>.@t?\330-\026?\320\262p>HM\327>P\361\\?8Tr>J\227\035?X8\">\374}\367>\000\264\356=\3207w>X\2171?0\364\001>\200\330Z=:\334l?\030\333\007?\220A6>\364\200\367>.M<?\240\314\346>P\373\222>\210\312=>\340\247\r>\000ID?lR\336>\036`Q?\200\'\221>\212rc?<\024\033?0\302\302>(\023E?\334\232\260>\200\214\203< \230\341=\234;\020?\360v\177?\270\367\000>\260~\231>\334\014\320>\2002!>\210\320U?\014w\375>H,q?\014VP?\010r6?\000\220\341=\334\032\301>\014\243Z?F\246j?\356\274x?\350C\335>`,_?d?/?\216\311D?\300}\026>\264\032\030?.\002=?\376&*?\240\274\002?@\342\356=6\260J?@\227\003>\374\273\225>\024z\030?p\0206?\350\244\024?(\310{>x\233R>,\350\261>\\\350??\214U\302>\26439?\252\357 ?j\240|?\230\257\342>\"\203\r?\004\321\367>\264\314\232>D\354}?\224\334c? \034<>\336\306u?\240\001\010=TP\240>`@\322>\020\326\177>`-1>h83?\004\215y?p\227\213=\\N\311>\240\\\211=:1\010?:\231\031?\224\037\302>\230pT>\246\035\t?b\351\023?\350\205W?\334\016\013?\340Nc>\352RP?&\274\"? \266f=\014\002\005?\242!q?\264\021\243>P\223Y?\036\3315?\034\2073?\260\3666>\370\016\r?\354$\361>t\304\032?\362\202<?\204\036\263>"
      }
    }
  }
}
node {
  name: "filter1/read"
  op: "Identity"
  input: "filter1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter1"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\014\000\000\000\014\000\000\000\020\000\000\000\020\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "input_0"
  input: "atrous_one/SpaceToBatchND/block_shape"
  input: "atrous_one/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "atrous_one"
  op: "Conv2D"
  input: "atrous_one/SpaceToBatchND"
  input: "filter1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\010\000\000\000\010\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND/crops"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "atrous_one/BatchToSpaceND"
  op: "BatchToSpaceND"
  input: "atrous_one"
  input: "atrous_one/BatchToSpaceND/block_shape"
  input: "atrous_one/BatchToSpaceND/crops"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tcrops"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "filter2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 31
          }
          dim {
            size: 31
          }
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\346gA?\362\377\n?Pr\356=\260=\370=`\273b?<\020\n?zl@?\256%&?h\301^?@oY? \277>>\240\267|?\250|\342>\004eZ?\354\"\237>0\245\304>\370\275M>\000\354d?\030\005\003?\372m}?4\223\221>P\242\336=DI\365>\316\231 ?\270\332;?\332\260O?$\332\240>\260\302\233=P\326p?N\233B?J\253\033?\334\236\216>\274\1778?\000\335\325<\200\257\252=h\234\311>\\\'??l \201>\010~y>8jT?\360\344\357>|\n\t?le\353>\0342\\?\000^\340=\300\232\265<\360\272c?&\247I?@\203\263<t\241N?\020L\245=X\346\253>\000D/?\326\343_?\2224=?\324j9?\240qz=\364\211??\374\331\r?\200fc?\200\364\003>\300\275*?\270\337E>L\214-?@\353\223>\nb\026?`\353\306= vB>\010\324R?\234\244\224>B\037g?f\026X?\034\025\323>\346\322y?\370\242\271>\014,/?\320\343X>l\365\315>\350,\313>nv\037?\000\326\203>h\255\363>\264\371)?D\231s?\026\204P?\264\305\335>ZVI?\3660)?<i\324>r\013_?\000\2570=`>\026>\036\036\"?\300\\6?P;_>d4|?xuJ?\234\236\223>\350\301;><\276\256>6\3425?\342ZN?`\3209>\000:\016=\316U0?\2006\022?(/x>2l*?\254X\037?\276\2528?\344\233m?f\n\\?X#U?\004\203\250>\000g\376=~\351F?\320\253P?\264\037V?\334;8?|$\227>\210\350<?\270P<?@,!=\362/^?l\364]?\344\0172?\254@\242>\240tB=\020a\305>J/&?\200n\272<\000\366\366<\310\354\260>\212\211\003?\030b\205> N\353=\020\303\331>X\226\014>\342\310\020?Dt\346>\36207?\000\326Y=\240Mb?0^q?0\353\325>\000\323\333=\020\320t?$<_?J\324\033?\000\006_>\200\345&<\260\275\034>P\347\255>\300\017\305=X\312s?\324 \331>r\231[?\340\370\034=8\240v?\000\272\215>\264\317\305>\032}$?@\203\234>t\241C?\334gb?\020H\255=\256\005+?p\207\230=\224RN?`\232\017>P\024\310>@\265\"=`!$?\034\t\302>\034\241\274>\270T.>P\336$>\212\007Q?l\177W? \tx?6\032#?t\277\260>\030\0231?D\203\177?d\217\250>d\005\272>x\302\266>D\200\213> 9\302>\230*#?\340\272d?\330ju?0\321\277>t\3663?\234\362L?\242\346Z?\240\010\340>\276t ?\260\236q?\204\333\341>\326\032\010?\370r2>\274\3557?P\031\177>\204\241 ?\330\223\226>\270\346\207>\224\033??\000R\200=`\243\002=\200\267D<\340{m>\244\000\324>(@w?\254g\036?$\260\r?\014\337G?:\225<?\006\2637?z\'\002?(\241\201>\252H>?v\001W?\234\322a?\220-\270=D\264\250>\376\311\026?x\007\r>\330\314C? a\357>\322\254@?\270\331\313>L\033\360>0\376\201=\00657?\270\355E?\204%\223>\354h\254>\232\021=?\000&\211=H\360;?\000\244\032=\000E\032?\206\031!?\\$\001?\274^\237>@\374\020=\006\377A?\316\374h?.\214I?\330\341\275>\000!%=\312\271\"?<*\236>p\233\316=t;\340>t\032w?\242F\177?0\246\205=\200\250\360<\332\221\"?<J\201>4\350f?\360\261??\266b(?\\:\341>\204i\325>\334\325\004?\272\343R?\002w;?\212^e?\000\032|<\034U\022?\270L\007?\024\371\023?d\363\350>\226f>?\030\231\251>P\333\325>\204\030q?@\217\000?8\353\n>\010\374\312>\2000Q<2\234\027?\352^#?H=\030>\370\2461?\246\0369?fm\002?8\244\317>D\033L?t\223\274>\374\001H?\320\337\022>\304\263\210>:\372\025?p\254\244=\350\223)><\340\262>\316A\036?\204\212\245>\274J\220>\256\020f?\334\372\027?\000\206\017;\266\316]?\320\016\022?\240\303\000=\330\025\313>\220\326w?\0365@?r\326&?\000\032\002=<\337,?\270\315*?0\3601>\246n\022?\244\2130?\002\236\037?>]V?\300\263\016=\240RK?\342;\027?xy/?\2208)>8\333D>\240~/=*\262??\314\302\027?d^\353>\010n\007>B\317,?H\323<>\250o\004?\214\206a?\\\032\250>\010\3132?\362\265t?\000\255v=\000\215K?\206\212\n?|\226\'?\300\200\033=\010\232\352>\330\221J>FCA? _\252>\360\206P?\210u\025>\250`v>\272 8?\340\247a?\240|S=\210\246\005?\220\224g?t\200\271>\246s=?\034\371\231>r+\t?\334\336m?\030\217\376>\264D+?\352/]?*\236\024?\370\225\003>h\023V>\314\237\265>\230\366\263>X]\247>&\2047?\010\010\340>\240X\256=\3545\004?`\0072=\362kg?\302\265N?\000e\302=0-*?\250\'\213>.O\005?\300\231J=.\235R?4\355d?TO\324>\200U!?\340\303\225=\202\027h?\370\026i>\262\212_?\360\200\212>\230d\002>\310\264n>D\254\327>\340 ]=\220\356\022>\266%9?\354\010\303>P\336\243=\340\005\024?\230\371@>\362\3763?$\335]?\\ \240>T`V?\352\362\036?\240:#?\220DP?\204\203d?T\236D?J&\023?\322\t/?p\240\213=\200\241\206>@AP?&\213&?\"5c?\240\336!?0\001\027?\320\312\315>\362\0262?Xa*>\370\270,?H\0331>.\017+?\036\255\007?6\200\n?\330\276\207>\256W\026?d\023\351>\220xF?\370\207\376>z\305H?\030\232\320>\252\000S?\230\211A?p\375\351>\000l\310;Xw\026?6\334n?\252\260V?\332\362T?\2602\303>\370MW?|Z)?$\032\233>pu/?\250\224\317>\\\026u?z\237k?@\372\304>p\\9?\014_e?\032\213y?\000h\326;\216\325B?\266\302X?\320\322\204>Z\316Z? t\246>\252\036!?\036Q\025?\212\306)?\020\026\214=\320\241\275=\232\257c?\300XR=n\1778?\274Y\225>f\261*?\024\336\304>\032%\031?(\026\277>\026Hw?p\203f?P&\201>\244\036\027?\214T\315>\226\014\n?\226\226\n?\306B`?\266\252\r?\030\2440?\360W\031>H\275\"?\246\302u?v\220\031?\262\272V?\216\257H?`\326h>\2601\373>\300\307O?X\273\014?hb\305>\352tZ?X\205I?\200\232k=\322W(?\220\343@>\200\214\035>\024\233\242>p\225\250=\354\024\236>\270\262U>\374\206o?\210\032\027>\030\333t?\244\307$?\020\225\002?\260\r8?`\314\273=\244\257,?\204\3729?\240l\227=.\010S?$\254\206>\306\007\034?Ri\005?\300\234L?z\265\r?z\220\r?2-U?h\351G?\254\355i?^\026\024?\354\336\266>\220\364\221>\254\023\300>\300KN?\200x\227=(\250Z>\014\250\005?\264\365C?\342\371N?\340\247\004>Hk\026>\334\321\320>Vko?`I\\?\314\272\275>\202\003y?P\371\230=\360\360\270=(d@>T\235*?\300\322\005=\356\233|?6W ?\250\217\310>HAU>\024\000Q?\034\377\267>\\\346\221>\340T\305>\314\217\200>8\223\200>\276\325-?\364\0371?\3602\206>\220\2601>\330\252Q?\2047\251>\"\2448?p}N>\0308Q>\206\r\024? \320\243=\320_\321=0*\n?\22666?b\r(?$\302r?<\237W?\210\317C>\262\226\027?\004\276Q?\236\371o?\020s\300>P\355\331=\010\343>>\036\240B?\272\255\r?\014J\261>\220\245\210=\240\226\363=p\253\201=\374\367\033?\320\347\255>\310\264K?\330\000\206>p\375\326=\360F\006>@\207F=\000\254\323<\210\017\312>F\3316?\370V\370>@}\230>D-\327>\200\324\306=\226,(?\206tX?\334\r\020?<w\343>p4\002?\212\006n?J\270a?\032\315\r?\250\342\237>,\351.?\340\261\353>l\200??\010}D>\260\234\000>\020\023\340=\034\332\234>\014\034\346>@G\340<x\251\374>\230\0221?\014\316\212>\346\034{?\274\264*?\360#e>\300\311\032>|\304I?\374\265r?\244\373\340>PfV>\324C\"?\350\351g?&\267W?\310 k>\014\207C?\230P$?\262\231o?\374)\005?\310\001Q>\366UE?\2421\026?\270\255C?8\257~>\250\260\002?\250\025\342>\034*\274>\370^t>\360\327\020?>\240|?\\y\255> \303)=\340$\274>\326\213\007?\0000\355>@t<=\340\271\254>\256\035\005?\026\2767?\342\277S?\232\373q?8`V>2\001 ?\362\352;?hW\226>\240\021\201>\2462\002?`\367F?\206g\013?\036\373k?\254\2277?$+\317>\210#m>`\257Z>\220\273\217>\024Bk?p0\205=\334JX?pz$>|7d?\324\344#?\272$B?p\220\277=\274\253\203>\020\376O?\230\313\303>\340\207\260=(\010\031?\316\260\010?\000\233\266<\340\341>?\270U\211>\376\3029?@\224V?\314\346V?\004\376\n?\3209\227>\2102\351>\314uJ?\034W\326>\214|#?R\223b?\320\231\216> V%?\\\037\275>T\3168?\000b3=\354\206\256>@I\263<\214\004\243>\360\302<?@\327m>4>\275>T\231k?|K-?\350\n\302>`,h>( f>P\362^>\020\366\005>\346\271\024?\326\231<?\312\212T?J\023K?\302{i?\"\351y?\030;r?\300+\004=b{\021?\230\201\241>\250u\">\220L\200=\274\350n?\214\326\351>\374\301\032?xO\'><\264\330>p\320\n?D\306\303>\2009\030>\234\204m?\310aX?\2648\363>\350\237\032>\212\341[?\\\256\004?d\321K?@Pm?<\340\221>\264\321&?`?_=h\020(>0\007x>PL\252=\320\024\317>\212\3014?\240k\310=Z\211_?`\332\027>>\026\027?\300\"\360=f7D?\252\261\004?\346C\023?\374xJ?\210\'t?\332w\007?\216\224\006?\322sw?\374A\234>P\227\303>p\314^>\214\323\016?\374R\364>\206\000A?\244y2?\356\247O?*\357(?H\251\302>@:\357>\3367\017?\034\310T?\\\201\265>~\331\\?\234\334\231>\014rp?\270\257s>J\226=?\"W=?H\224i>\212\277F?\222\036@?\372\316)?&-}?p\252\221>4|\226>\002\311L?\250\271\016>$\001@?\230\351\017?4\345\213>\020w\242=\270\321\363>\270e[>\216 {?\340\212m=\234\203\227>\200\025R<\310\331\263>LA\250>P$k?\000\332=<P\341\327>\324\354b?\304\262!?\000`\223<,\207O?H\023U>@([=\302o\004?\242L ?\306\213\023?\322+\030?>\275H?\260\246\005>\230\007`>\240\237\026>t\250\326>\\\305\032?\342\263q?\220\235s>\244\332\327>\010\217\216>\016\233V?\3201X>\370.\327>\274\242\273>`\031C=\374V\344>\030\277\024?2\276O?0{\352=\336qP?\252\004\004?\360c\217>RdC?\350\256w>FvN?4\245\241>P\264\330=p\3749?d\270/?\272K\010?\200;K=\002LS?b)\024?\342\360B?`\211c=\330\nh>\322\216{?\360\242v?\340M\n?\242\217\\?\340\254\177=P\322\276>\310\204\031?\224\005N?@>\232>|\362\345>.L+?\260\022\221>\\\261M?\360\311\320=|d\326>\230\tJ?\336 >?V\003h?\332\345\017?\264\344k?T~\'?\212\t1?\242m\023?\350\372u> \036\210>\360!G>\274>I?\302\360_?\256\206\003?\310\375]?\240 C?\240k\266=<\232\327>tT\232>h\255\352>\264Qq?\240\214Q>\370\004p>@\263\301=@L\327=\2346\030?\010\352y?\310\304\242>d\344??\270\203\032>l\371\214>\000\277p<\020\302\362=\270\017#>\322E\000?0\rG?\344\211j?X\267z?\322\364g?\030^2?.\370\032?\220\315\304>\264\242\337>\320\364\271>\322P\027?\"\212\177?\220%F?\004\230O?RO??0Sm?\342d\014?\260\260X?l\236[?\314A\305>X\232J?\3543\022?\210\232/?$\276!?\3604\357= \224\365>\260#b>$7 ?\026P3?\272`A?\030\030\323>\252[v?\350\367\200>\350\357\005?\010:\222>\376[}?\224&f?LmB?v\2300?8\374g?\000\3000>\332\254\006?\000\362\270<\314Xr?\376\245\017?L\017l?$\006\251>P\324\362>@\0147=\212VU?\0003\370>\230\020\177>TRJ?\272\222T?$\003\034?\210\034[?@A4?\260\346B>v\360\016?^\371\025?\340\331J=8\005\323>\240\353w?\220^\354=\364\017\277>\324\217\335>\240\267??\346\236/?\360K\305=\320v\335=\340\021b=\036\237w?\366\354K?\000\306\323<\330\340\003?\354\177l?h\003\225>\2647\251>\210\247->\254\262\351>\254\375\234>*\001\r?\332\310G?\324\003.?^\343\002?\312\364\r?\260\334\343=\320V\202>(83>\310\332x>P7_?^Wf?\022r&?xR\313>x*O>~7H?\006d)?\200\342I>4\026\231>\024\347\377>j\367\032?\270\256j?\346\330\\?th\322>\014\317T?\234\200n?B\250z? \334\203>\232\374M?\220\254n>8<\017>\314\324\325>P\245\206=\374\357\210>.e}?\330\361\022?(\210\035>2\005\t?f\342r?\274\317s?6_\013?\352.??T\302\243>\344\"\347>h\243_?P\374\006> \030]?v\001Q?H\242\332>po\240>D\t\354>\260\334V>.\237(?8fd?\314\037\271>H#i?\304\202\350>\350\315q?d\222_?Ne_?\372\234\004?0\235\326=\036\320\002?\354\324\251>\\\013\361><o\240>:eQ?P(^?\220d\276=\200\247\366=\004^\007?,1\006?\300\216\313>\244\024\373>\232C;?(]_?\334\217S?\240b\330>\234\246s?\220\252\027?`\t\245=T\013\253>0\313\r?\242\222(?0!\352>z\357\021?H5d>>kK?\324(L?\030\303;><u\031?\320\231\210=pJ\022>h\333\005>\350\237\333>\206\305X?\210=@?\020\003>>L\177\351>\340]h>0\033\350=H*R>\300\2434>\324\302Q?\220+~?\226\020y? \306+=\300\245\300=@B\330=\330\374Q?\256\tz?b\230Y?\320\247\005>\264\277=?\024\025\335>\224\037\302>.\241)?,~\375>\240\242s=\034\003\342>,}\247>,\025\007?\004`\325>\204\206\273>\370jU>\000\223#=\230\3067?\002\001;?\330[\005>&\375R?@v\315=6#>?\350%\307>\036\006\033?\340\323\262>j\316W? iH?p\257\354>\350pN>\210\223x>\002\337W?L\253\221>\230`\000?\206\266I?8\023a?\004\324=?B\2171?\000\230\201;|\245D?^\317i?\234|\236>\000\367\031?P\323\252=\220\336\024>\014\206\235>\200\251*<\2409D>\200\262\031=\030\273\202>\374\270k?\270:E?4\243\344>P5\024>\030KE>\210\t\273>\240\037\000?|\302\355>\214nw?\360\206\017?6\014\035?84??p\252b?\354\245\024?@\333\302>&\035_?\316)c?\240c*=\250\030\377>\212\322u?\370\334P?\030\274\266>\316\t=?N\001K?\332\252~?&/\024?\214\006\004?\262\033\020?b\213l?@)5?\314\276V?`\326o?l\2375?\240\303\030=\254g\255>\330\207\317>\240\367$>\260-(?H\210\236>\206\272*?`5s=\276?-?\260d\205=\030\001\263>\000!\355>\3024n?\n\215J?Rw*?\220\r\">\254g\372>l\260\004?\026Is?p\375.?(\256F?\240>.=\234\300\373>0\004\250>\232\2705?\304RF?\030\201\037>\340\236\351=\230J#>\352RM?N\013\000?\000\230h=\222\3520?\024DP?\014\273\270>\374\254\322>\024V\036?\230\227.>\252\021.?\204bS?\276Gh?8\261q?\004\347\312>\362\361.?\206*\010?\020\355\240>\320\'^?\000\3203?\320\254\361>\000Lb;V0\020?\300N\352>\014\205\341>8}p?X&\354>\3707\220>^\2332?\214\327\362>\004\022\217>d\371r?\3146\322>\344\204\201>B\2551?\300\270f?\240Zz=L\352\272>\360\332)>\014\021\207>4\207\010?,\013+?\372TH?J\351\004?T\026R?\224\324f?\376\301r?<\234e?\200u\302<\014\326H?HZ\375>\370\262\020?p\370\'?\306\234d?\204\006B?p\352\\>lBV?\262\343\024?\010\310\035?L[@?\264\030\355>n\367w?\006\0264?\274\256\373>\340\"R>\366\265q?\030E\035>h\343\300>\200\3321>\324\035s?\246G<?\240\202r>\340\274\367>Ts\003?< \315>\200\364\252>\214\005\250>\300_4=\272\237k?\360\315\351>\314\340\t?\212\314R?\304\250\223>l\366+?h\313\243>\004\201\216>|\3356?X4\365>T\325w?\200\016v?\376\tW?\322o2?\260hl?\344\005\376>0N\364>\"\323N?4:R?\200\201\375>\002\320V?`U|>(/I?\360\306\213=X\327_>\004\007\016?\"BV?\210\303\237> \240\244>P\336\251>`O\347>\260\366l?\010\276S>\322U\177?\314\232\372>\2501i?\260\033!>$\020\246><\270u?\202\353\027?\350\332\377>\312\327)?@p\212>L\301\304>\254qX?N\'!?\350%\266>\260\250\222=\322\363$?\360\365\356=\260\272\276=pK\'?\010\274\332>\330y~>tHi?\200\245[<T \236>\322dl?8z/>\264G\221>\000|\230=\314_k?\320D+?\0002o>\330\223\276>\016\316`?\340\005y?\250\254\023?\204\007\306>R2C?\030\341G?\200q\\?P\220\207=\030P\333>\310{\347>\314\332K?D\'\306>\004\326e?\370P\345>\320\361\363=@\347\261<\320\254\212>\304rN?\030\242t?T05? CY>\250\014\225>,\220&?\340\331J>\000\247`=p\031\315>\320m;?H_\235>\340D\227=\000\2026=h\357>?\376P\003?\372\221 ?\000y\262;\234\326\210>\264\357Y?jQ4?\000{X?@\255\226<\302&n?\326\304\'?P\233m?6rp?\200e\331>\370\222q>\200\356%=Xo??\232\342-?\000\310\\=\254A\035?\256\2113?\200\243(=\214\235\276>\260o\307>\340Q\'?\370\302g?<\031^?\000`\2369\000%\256>\200\243E<\200\032\026?\252\274G?@\243A>\224\277`?\214\032.?&:[?\200\257\323=B\000E?\352\332p?z\000J?h\357\260>\222\tQ?\034\345\367>\024\233\316>`\031\340=\274\354\360>H\364E>\242\275+?\374\3101?\200\244J=\250\341\322>\316\026v?\202\370o?\370@\233>d}:?\340\374\341>\346\'\r?L\014\375>\204\023x?\344\321\373>\222\253\031?\000\232\351;\320\344R?\244\3333?\"ln?\240\234-?4\3245?\004(\313>\022:J?x\332\363>\032\017\030?\204\3561? 8\354=D\331\312>6<\"?\214\322`?($s?`\243\024?\274\344\334>b\234D?`TB?\010\316J>4XG?\222\271\021?\3169I?(G\245>\354`\354>\366\225-?X\205\266>\322{Y?\3500\222>\000h&:\264\203\231>\024hs?\260\307\327=\270j\207>\"=&?\316\247\013?&&v?\330L.?\214\241\030?`F\373=\200\332\306>6\374Y?\346\275\031?\274\240T?\234[\036?\226\003*?(z\345>\354\003\\?t\240\344>d\245$?X\320\030> OT?H\213`?\310:\037>\3700m>vGk?\200\214\006<\336@I?\332q\n? QD?\000\270\367;\004\3510?v&=? \007\263=\264\346m?\264yw?\3367\036? \257\330=\004[d?\200L\205>~\237]?\250\265p>\364Lr?\372| ?\220B\216=\344\301\305>H[\370> \267\210>ly\223>\212;7?\200\365Q=\276v\025?4\2264?\000\311\250;\354\263\275>@\307\277<\350\0264>Z[\006?\210cC?\210\334\226>x\334\000?\000\013;=\246\2253?\366u\027?F\0334?0\007S?\356\354D?\260\002r?`\300U>`\222S>\3748\222>.\372!?4\177\370>\316K}?\026l\021?\\\303i?N(~?\254Y\225>`4\005=\264\300\332>@fz=\262k.?4Gw?\3001T=\000\322t=\210Qa?\310&\037?|\023\220>\302\220_?\270\035\204>\234g\201>\204\311\367>\020\364\227=\260\357!> j\257=\252g\022?B\023N?\266\034\030?h\233F?TJ\354>\"\2178?(\211\206>\274\212\343>V\223/?\250l@>\266\305B?D\212\224>\000U2?\004\266\234>H\305\001?\240Kr=\360\032\370=\000\315\301>p\226\255=0+P?:\013m?(\376,>\240\203\037=\272\220-?\014\231\335>\334\013M?\010\t\007>\234\247\013?\376\273\'?t\347\315>*\354o?\260\325\372=\264A\300>\204-\021?|\310\226>\n\310\036?@Q\333>\260\216\323=\034\333|?\310\215\033?@\033\007>x\207Q?Vov?Z\235Y?\356\2036?\024c\366>*\035G?\232\023)?@tg?\306c\013?4P\376>\340\222\204>v9\n?X\251m?\304\243\340> XF=\264\304\003?\200\016Z?\204}W?\226\227\014?4r\016?\020X\240>\346\250U?\220\302\204>\330\213\221>\260k7>\244\347\313>\022\254d?\226\037x?h\274\345> N$?\224\302\335>P\022\242>p\345j?\374\231x?V\026Z?p\350\235>\370GC?\252\341\001?\310\020\364>\0004Z=n\333l?\210\320`? \020\301=\016|.?&\271R?\000\\i?\344\222P?\300\227\240=D6\302>@|\300<\004\335D?N\036=?0z\353>\276\375U?X<\361>\260\343\252>\000\233\013<\314w<?\244\354\205>\344\240j? \215D>d\326\333>\324\316X?\244?y?\022t-?\\\213)?\360\270^?P\003g>X\025g?0\263W?\356\270\r?h\354\025>\220O\214=h\033k?\23224?\270\341;?\270\225\336>X\330u>Pl\320>\210\006&?0]??p\331\214>`\1777?J5\025?\220ya?\242{{?\352\245\014?@\245\314<`Nl?T}\024?\324T\313>\222IY?\240\343\367=\016\305\001?\020\237u>@. =\020\026[>\200<M?\200S\374=\362 Z?d\347\264>\016\325V?P$T>\346A\004?\220<\257>N\2065?\200\022\302=\034\3201?(\216\\>Xh\031?\\{\323>\036\210s?d4\276>P\340\261=\360\3279>\3641:?\320\330!>\036ld?\200\233\216<\006`\\?\2343\226>\010\t\341>\206\210\016?\\>\331>0\370\t>B%\002?\202R!?\"v\016?\024\366i?\306\252F?0\027H>\354\313-?\220\213\201=H\265m?2`/?\274T\366>x\277D?\270o\327>\214\032h?\270\177f?\254\241\322>@\246\021>LzU?\376\207\n?2\276x?\200\014\226=\344Y\327>\216~\003?nT\022?x\r3>\270\305p?>\305\024?\370\323T>\230\0143>\320\200[>\346\360T?\362z}?\372XM?\250\256~?0[_>`9!=l\313A? ez?\350\022:?Z\204\014?\244l\226>\264\341\230>@tq?\300\003\222>8\350\362>\002\016\032?\264\266-?\340\352\230>\350\211\014>X@\277>\364\\h?\376\234=?n\230\017?\000\275\357<\024\346D?|4\271>\240Q_>\340\317\372>\254\222p?\360\325\362=T%\307>\000X\032?(\236\313>\370\352\016?\272\301>?\364=Y?\024\343\341>NsP?\320\017\231>zX{?\030f\034>\374\271Y?\270\346\277>P-r?x\205L?`\300@>\324l\330> \226\207>\260\371L?\344:\312>\264j_?\204\3136?\226\221Z?\020^5?lj}?\300\037\314<\000\270\275>\254c\326>\374\007\217>\264\276l?@\353#?\340\202\t?xpc>`$\375>\000HV=\200\307%=\\\322H?\254\252J?\364\301\313>\232/\030?\300\370l?\272Ca?p\203O?\302q}?\340\000[?\000\243\034=\200,~?0\367\326>b\222e?\376\316c?\360/\244=\230\312b?\3642\213>\204\306\243>\214\325\371>\200J\347<\370ZP>r\244-?P\254\031?\320\321\226>l\206\005?\254Z\237>0\322d?H\367U?\270I\035?\306\300P?\010\343I>\020)\202>v\024Q?\002h\"?\224 5?\276LH?p\204\031>\000\363}=`\375\340=\020\314w?Hn8?@\263U?\240%o>\354\332\314>\374\262\245>\2607\267=\206W5?\200xa<\2443\241>\210OQ?,X_?\242\331C?\262/#?\\\216\340>\200\230r=dz@?$\341\230>L\200 ?P\245\225=\2501\t>\212O|?$Lw?|E\321>\320\223\264>\234=\300>\200a\230>\"m\014?\350U%?\220\330\251=\260\"\235>`gA= \323V>\274\254L?\020K\216>\312\270.?\272wG?\240(s>\014\325\016?d\376>?\220\004%>RZd?\270;\n?\004^\224>R\240\020?.]{? \263\373>\340\t3>\000\251\031=F\257b?L\230\240>HV\252>\030n{>\360\223\213> dS="
      }
    }
  }
}
node {
  name: "filter2/read"
  op: "Identity"
  input: "filter2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@filter2"
      }
    }
  }
}
node {
  name: "output/SpaceToBatchND/block_shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\002\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "output/SpaceToBatchND/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "output/SpaceToBatchND"
  op: "SpaceToBatchND"
  input: "atrous_one/BatchToSpaceND"
  input: "output/SpaceToBatchND/block_shape"
  input: "output/SpaceToBatchND/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tblock_shape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "output"
  op: "Conv2D"
  input: "output/SpaceToBatchND"
  input: "filter2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
library {
}
